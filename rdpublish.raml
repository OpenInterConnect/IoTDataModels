#%RAML 0.8
#RAML for Resource Directory
title: Resource Directory
version: v1-20160622
documentation:

  - title: OCF Copyright
    content: Copyright (c) 2016, 2017 Open Connectivity Foundation, Inc. All rights reserved.
  - title: OCF License
    content: !include LICENSE.md
  - title: OCF Disclaimer
    content: !include DISCLAIMER.md

  - title: Resource Directory
    content: |
      A Resoure Directory is an Device that helps other Devices to be discovered.
  - title: Introduction
    content: |
      For resource in other Devices to be discovered using the Resource Directory, these other devices have to publish the resource links they would otherwise have advertised through /oic/res to the Resource Directory. Once the information has been published then the Devices may stop responding to discovery queries and may also go to sleep.

      The Resource Directory will respond to all discovery queries with resources that it directly advertises and also the resource information that has been published to it.
  - title: Resource Directory discovery
    content: |
      Before a Device publishes its resource information, it must first discover available Resource Directories and then select one of those to publish the information to.

      This doscovery is done with a multicast query to /oic/rd. The information returned is either a bais factor or a list of attributes that help the discovering Device to select one of the RDs. This RD will be used till the RD does not respond or another RD is selected.
  - title: Resource Directory publish
    content: |
      Once the RD has been discovery and selected, the Device can publish its resoure information. The resource information are published to the /oic/rd resource using the "publish" interface. The information that needs to tbe available in /oic/res is then populated by the Resource Directory.

      Periodically based on the TTL set by the publishing Device, the information that is published has to be refreshed with a new TTL or the TTL can be updated if there is no change in the information. It is the responsibility of the publishing Device to ensure that the information or TTL is updated before the previous TTL expires; failing this the RD will garbage collect all the information related to the publishing Device.
  - title: Resource discovery
    content: |
      The discovery of resources is done in the same manner as for any Server. A query to /oic/res either over multicast or uincast is required.

schemas:
  # Each schema represents an OIC Resource Type. The baseline interface operates on the entire representation
-  rdPublish: !include schemas/oic.rd.publish-schema.json
-  rdSelection: !include schemas/oic.rd.selection-schema.json
  # rdDelLink: !include schemas/oic.rd.del-link-schema.json

traits:
- rddefinterface:
    queryParameters:
      if:
        description: |
          Interface is optional since there is only one interface supported for the Resource Type
          Both for RD selectin and for publish
        type: string
        enum: [ "oic.if.baseline" ]
        default: "oic.if.baseline"
        required: false
        example: |
          GET /oic/rd?if=oic.if.baseline

/oic/rd:
  displayName: Resource directory resource
  description: |
    Resource to be exposed by any Device that can act as a Resource Directory
  get:
    description: |
      Get the attributes of the Resource Directory for selection purposes.
    queryParameters:
      rt:
        description: |
          Only one Resource Type is used for GET; RT is optional
        type: string
        enum: [ "oic.wk.rd" ]
        default: "oic.wk.rd"
        required: false
        example: |
            GET /oic/rd?rt=oic.wk.rd
    is: [ rddefinterface ]
    responses:
      200:
        description: |
          Respond with the selector criteria - either the set of attributes or the bias factor
        body:
          application/json:
            schema: rdSelection
            example: |
              {
                "rt": "oic.wk.rd",
                "sel": 50
              }
  post:
    description: |
      Publish the resource information. Appropriates parts of the information posted will be discovered through /oic/res
    body:
      application/json:
        schema: rdPublish
        # Maybe the entire published information should be treated as a new resource - as if created using the link-batch interface.
    queryParameters:
      rt:
        description: |
          Only one Resource Type is used for GET; RT is optional
        type: string
        enum: [ "oic.wk.rdpub" ]
        default: "oic.wk.rdpub"
        required: false
        example: |
            GET /oic/rd?rt=oic.wk.rdpub
    is: [ rddefinterface ]
    responses:
      200:
        description: |
          Respond with the same schema as publish but with the links have the "ins" parameter set to the appropriate instance value.
          This value is used by the receiver to manage that OIC Link instance.
        body:
          application/json:
            schema: rdPublish
            example: |
              {
                "links": [
                  {
                    "href": "coap://someAuthority:1000/somePath",
                    "rt":   "oic.r.someResource",
                    "if":   "oic.if.a",
                    "ins":  12345
                  },
                  {
                    "href": "coap://someAuthority:1000/somePath",
                    "rt":   "oic.r.someOtherResource",
                    "if":   "oic.if.baseline",
                    "ins":  54321
                  }
                ],
                "ttl": 600
              }

  delete:
    description: |
      Delete a particular OIC Link - the link may be a simple link or a link in a tagged set.
    queryParameters:
      di:
        displayName: ID of the device making request
        description: |
          This is used to determine which set of links to operata on. (Need authentication to ensure that there is no spoofing). If instance is ommitted then the entire set of links from this device ID is deleted
        type: string
        required: true
        example: |
          DELETE /oic/rd?di="0685B960-736F-46F7-BEC0-9E6CBD671ADC1"
      ins:
        displayName: Link instance for deletion
        description: |
          Instance of the link to delete
          Value of parameter is a string where instance to be deleted are comma separated
        type: string
        required: false
        example: |
          DELETE /oic/rd?di="0685B960-736F-46F7-BEC0-9E6CBD671ADC1";ins="20"
    responses:
      200:
        description: The delete succeeded

# The discovery through the /oic/res of the resource directory is the same as the standard resource discovery
# Need to include the RAML for /oic/res based resource discovery
